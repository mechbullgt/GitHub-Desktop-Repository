@model Adsroid.Models.Campaign

@{
    ViewBag.Title = "CreateCampaign";
}

<fieldset>
    @if (Session["username"] != null)
    {   <text>
        <legend> Welcome @Session["username"].ToString() </legend>
        @Html.ActionLink("Logout!", "Logout", "AgencyLogin", new { }, null)
    </text>
    }
    else
    {
        <text>Something Wrong with Session</text>
       @ViewBag.SessioName
       { Response.Redirect("~/AgencyLogin/Login");}
    }
    <br />
</fieldset>  

<h2>CreateCampaign</h2>

    <a class="btn btn-default" onclick='location.href="@Url.Action("Dashboard","AgencyLogin")"'>
    Go to Dashboard&raquo;
    </a>

    @using (Html.BeginForm())
    {
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Campaign</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @ViewBag.Message
        <div class="form-group">
            @Html.LabelFor(model => model.cname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.details, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.details, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.details, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.landing_page, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.landing_page, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.landing_page, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.payout, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.payout, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.payout, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.kpi, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.kpi, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.kpi, "", new { @class = "text-danger" })
                @Html.DropDownListFor(m => m.kpi, new List<SelectListItem>
                   { new SelectListItem{Text="CPL", Value="CPL"},
                     new SelectListItem{Text="CPI", Value="CPI"},
                     new SelectListItem{Text="CTR%", Value="CTR%"},
                     new SelectListItem{Text="CR%", Value="CR%"},
                     new SelectListItem{Text="CPV", Value="CPV"}},
                     "Please select Key Performance Indicator")
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.audience, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.audience, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.audience, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.start_date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.start_date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.start_date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.end_date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.end_date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.end_date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.budget, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.budget, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.budget, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
    }

